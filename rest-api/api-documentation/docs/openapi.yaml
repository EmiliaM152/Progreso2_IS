openapi: 3.0.0
info:
  title: API de Gestión de Reservas
  description: API para gestionar las reservas de habitaciones en un hotel.
  version: 1.0.0
  contact:
    name: Equipo de Desarrollo
    email: soporte@ejemplo.com

servers:
  - url: http://localhost:3000/v1
    description: Servidor local de desarrollo

paths:
  /reservaciones:
    post:
      summary: Crear una nueva reserva
      description: Verifica la disponibilidad y crea una nueva reserva en la base de datos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                room_number:
                  type: integer
                  example: 101
                customer_name:
                  type: string
                  example: "John Doe"
                start_date:
                  type: string
                  format: date
                  example: "2024-12-20"
                end_date:
                  type: string
                  format: date
                  example: "2024-12-25"
              required:
                - room_number
                - customer_name
                - start_date
                - end_date
      responses:
        201:
          description: Reserva creada exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reservation_id:
                    type: integer
                    example: 1
        400:
          description: La habitación no está disponible.
        500:
          description: Error interno del servidor.

  /reservaciones/{id}:
    get:
      summary: Consultar una reserva específica
      description: Obtiene los detalles de una reserva existente por su ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID único de la reserva.
          schema:
            type: integer
      responses:
        200:
          description: Detalles de la reserva.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reservation_id:
                    type: integer
                    example: 1
                  room_number:
                    type: integer
                    example: 101
                  customer_name:
                    type: string
                    example: "John Doe"
                  start_date:
                    type: string
                    format: date
                    example: "2024-12-20"
                  end_date:
                    type: string
                    format: date
                    example: "2024-12-25"
                  status:
                    type: string
                    example: "Reserved"
        404:
          description: Reserva no encontrada.
        500:
          description: Error interno del servidor.

    delete:
      summary: Cancelar una reserva
      description: Elimina una reserva existente en la base de datos.
      parameters:
        - name: id
          in: path
          required: true
          description: ID único de la reserva.
          schema:
            type: integer
      responses:
        200:
          description: Reserva cancelada exitosamente.
          content:
            text/plain:
              schema:
                type: string
                example: "Reserva cancelada exitosamente."
        404:
          description: Reserva no encontrada.
        500:
          description: Error interno del servidor.

components:
  schemas:
    Reserva:
      type: object
      properties:
        reservation_id:
          type: integer
          example: 1
        room_number:
          type: integer
          example: 101
        customer_name:
          type: string
          example: "John Doe"
        start_date:
          type: string
          format: date
          example: "2024-12-20"
        end_date:
          type: string
          format: date
          example: "2024-12-25"
        status:
          type: string
          example: "Reserved"
